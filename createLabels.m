
function[ ] = createLabels( )
nFrames=315
imageWidth=1280
imageHeight=720
tileSize=28 % 28x28 tiles
modelTileSize=224 % 224x224 tiles for Inception V3 ; 28*8=224 
floodedPercentageInTile=1 % We can vary it to say which pixels should be classified as flood pixels 
floodThreshold= (floor((tileSize*tileSize)*floodedPercentageInTile/100) ) + 1 % make sure there is at least 1 pixel which is flooded 

for k = 1 : nFrames
 imageName=strcat('flood_number_place_date_',int2str(k),'.png')
 dirName=int2str(k)
 mkdir(dirName)
 copyfile(imageName,dirName )
 cd(dirName)

image=imread(imageName);
size(image)
imshow(image)
imageRangeFilt = rangefilt(image);
imageRangeFiltFileName=strcat('flood_number_place_date_',int2str(k),'_RangeFilt.png')
imwrite(imageRangeFilt,imageRangeFiltFileName)

imshow(imageRangeFilt)
[BW,maskedImage]=segmentImage(imageRangeFilt);
imshow(BW)
imageBWFileName=strcat('flood_number_place_date_',int2str(k),'_BW.png')
imwrite(BW,imageBWFileName)

imageFloodLabels=~BW;
imshow(imageFloodLabels)
imageFloodLabelsFileName=strcat('flood_number_place_date_',int2str(k),'_FloodLabels.png')
imwrite(imageFloodLabels,imageFloodLabelsFileName)


croppedImage=image(1:tileSize*(floor(imageHeight/tileSize)),1:tileSize*(floor(imageWidth/tileSize)),:);
imshow(croppedImage)
size(croppedImage)
for i = 1 : tileSize : (floor(imageHeight/tileSize))*(tileSize-1) 
    for j = 1 : tileSize: (floor(imageWidth/tileSize))*(tileSize-1) 
         croppedImageTile=croppedImage(i:i+tileSize-1,j:j+tileSize-1,:);
         croppedImageTileResized=imresize(croppedImage(i:i+tileSize-1,j:j+tileSize-1,:),[modelTileSize modelTileSize]);
         imshow(croppedImageTile)
         %imshow(croppedImageTileResized)
         size(croppedImageTile)
         
         imageFloodLabelsTile=imageFloodLabels(i:i+tileSize-1,j:j+tileSize-1,:);
         %imshow(imageFloodLabelsTile) 
         imageFloodLabelsTileResized=imresize(imageFloodLabels(i:i+tileSize-1,j:j+tileSize-1,:),[modelTileSize modelTileSize]);
         %imshow(imageFloodLabelsTileResized) 
         
         floodedPixels=sum(sum(imageFloodLabelsTile))
         
         if (floodedPixels >= floodThreshold)
             croppedImageTileFileName=strcat('flood_number_place_date_',int2str(k),'_',int2str(i),'_',int2str(j),'_28x28_','flooded','.png')
             croppedImageTileResizedFileName=strcat('flood_number_place_date_',int2str(k),'_',int2str(i),'_',int2str(j),'_224x224_','flooded','.png')
             
             imageFloodLabelsTileFileName=strcat('flood_number_place_date_',int2str(k),'_',int2str(i),'_',int2str(j),'_28x28_','flooded','_label','.png')
             imageFloodLabelsTileResizedFileName=strcat('flood_number_place_date_',int2str(k),'_',int2str(i),'_',int2str(j),'_224x224_','flooded','_label','.png')

         else
             croppedImageTileFileName=strcat('flood_number_place_date_',int2str(k),'_',int2str(i),'_',int2str(j),'_28x28_','notFlooded','.png')
             croppedImageTileResizedFileName=strcat('flood_number_place_date_',int2str(k),'_',int2str(i),'_',int2str(j),'_224x224_','notFlooded','.png')

             imageFloodLabelsTileFileName=strcat('flood_number_place_date_',int2str(k),'_',int2str(i),'_',int2str(j),'_28x28_','notFlooded','_label','.png')
             imageFloodLabelsTileResizedFileName=strcat('flood_number_place_date_',int2str(k),'_',int2str(i),'_',int2str(j),'_224x224_','notFlooded','_label','.png')

         end
    
           imwrite(croppedImageTile,croppedImageTileFileName)
           imwrite(croppedImageTileResized,croppedImageTileResizedFileName)
           imwrite(imageFloodLabelsTile,imageFloodLabelsTileFileName)
           imwrite(imageFloodLabelsTileResized,imageFloodLabelsTileResizedFileName)



         
          fprintf('%i  %i\n', i,j)
          %pause
          fprintf('Processed tile [ %i - %i ] of frame %i \n',i,j,k)
    end
end

fprintf('Finished creating tiles for frame %i \n', k)
cd .. 
end


function [BW,maskedImage] = segmentImage(im)
%segmentImage segments image using auto-generated code from imageSegmenter App
%  [BW,MASKEDIMAGE] = segmentImage(IM) segments image IM using auto-generated
%  code from the imageSegmenter App. The final segmentation is returned in
%  BW and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 25-May-2018
%----------------------------------------------------


% Convert to grayscale
im = rgb2gray(im);

% Initialize segmentation with threshold
mask = im>0;

% Evolve segmentation
BW = activecontour(im, mask, 10, 'Chan-Vese');

% Form masked image from input image and segmented image.
maskedImage = im;
maskedImage(~BW) = 0;
end


end




% 
% for i= 1: nFrames
%     dirName=int2str(i)
%     mkdir(dirName)
%     imageName=strcat('flood_number_place_date_',int2str(i),'.png');
%     copyfile(imageName,dirName)
%     cd(dirName)
%       image=imread(imageName);
%             imshow(imcrop(image,[1,1,28,28]))
%             size(image)
%             cd .. 
%     
% end


